[workspace]
members = ["cargo:."]

# Config for 'dist'
[dist]
# The preferred dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.27.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "aarch64-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Which actions to run on pull requests
pr-run-mode = "plan"
# Path that installers should place binaries in
install-path = "CARGO_HOME"
# Whether to install an updater program
install-updater = false

[dist.github-custom-runners]
global = "ubuntu-latest"

[dist.dependencies.apt]
pandoc = { stage = ["run"] }
librsvg2-bin = { stage = ["run"] } # SVG support

[dist.dependencies.chocolatey]
pandoc = { stage = ["run"] }
rsvg-convert = { stage = ["run"] } # SVG support

[dist.dependencies.homebrew]
pandoc = { stage = ["run"] }
librsvg = { stage = ["run"] } # SVG support

# Render sample books and upload to release as extra artifacts
[[dist.extra-artifacts]]
artifacts = [
  "rendered-cargo-book.pdf",
  "rendered-mdBook-guide.pdf",
  "rendered-nomicon.pdf",
  "rendered-rust-book.pdf",
  "rendered-rust-by-example.pdf",
  "rendered-rust-edition-guide.pdf",
  "rendered-rust-embedded.pdf",
  "rendered-rust-reference.pdf",
  "rendered-rustc-dev-guide.pdf",
]
build = ["bash", "-c", "source scripts/install-ci-deps && ./scripts/cargo-dist-render-books"]
