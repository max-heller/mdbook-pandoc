name: Rust

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - name: Install dependencies
        run: ./scripts/install-ci-deps
      - name: nextest
        run: cargo nextest run --run-ignored all
      - name: doctest
        run: cargo test --doc
      - name: Archive rendered books
        if: github.base_ref == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: rendered-books
          path: |
            books/cargo/src/doc/book/pdf/book.pdf
            books/mdBook/guide/book/pdf/book.pdf
            books/nomicon/book/pdf/book.pdf
            books/rust-book/book/pdf/book.pdf
            books/rust-by-example/book/pdf/book.pdf
            books/rust-edition-guide/book/pdf/book.pdf
            books/rust-embedded/book/pdf/book.pdf
            books/rust-reference/book/pdf/book.pdf
            books/rustc-dev-guide/book/pdf/book.pdf

  clippy:
    name: Clippy (${{matrix.os}})
    runs-on: ${{matrix.os}}-latest
    strategy:
      matrix:
        os: ["ubuntu", "windows", "macos"]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Run clippy
        run: cargo clippy -- -D warnings

  rustfmt:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Run rustfmt
        run: cargo fmt --check

  msrv:
    runs-on: ubuntu-latest
    container: foresterre/cargo-msrv:latest
    steps:
      - uses: actions/checkout@v4
      - name: Verify MSRV
        run: cargo msrv verify
